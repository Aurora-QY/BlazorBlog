@page "/posts"
@inject IPostService PostService

@* <h2>Latest Posts</h2> *@

@if (posts == null)
{
    <p>Loading...</p>
}
else if (!posts.Any())
{
    <p>No posts available.</p>
}
else
{
    <div class="post-list">
        @foreach (var post in posts)
        {
            <a href="/post/@post.Id" class="post-card">
                <div class="post-image" style="background-image: url('@(post.ImageUrl ?? "/images/default-post-image.jpg")')">
                </div>
                <div class="post-content">
                    <h3 class="post-title">@post.Title</h3>
                    <p class="post-meta">By @post.AuthorName on @post.CreatedAt.ToShortDateString()</p>
                    <p class="post-summary">@post.Summary</p>
                </div>
            </a>
        }
    </div>
}

@code {
    private IEnumerable<PostDto> posts;

    [Parameter]
    public int Count { get; set; } = 10; // Default to 10 posts if not specified

    protected override async Task OnInitializedAsync()
    {
        posts = await PostService.GetLatestPostsAsync(Count);
    }
}